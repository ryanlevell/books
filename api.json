[
  {
    "title": "Java Performance",
    "authors": [
      "Scott Oaks"
    ],
    "publisher": "O'Reilly Media",
    "publishedDate": "2020-02-11",
    "description": "Coding and testing are generally considered separate areas of expertise. In this practical book, Java expert Scott Oaks takes the approach that anyone who works with Java should be adept at understanding how code behaves in the Java Virtual Machine—including the tunings likely to help performance. This updated second edition helps you gain in-depth knowledge of Java application performance using both the JVM and the Java platform. Developers and performance engineers alike will learn a variety of features, tools, and processes for improving the way the Java 8 and 11 LTS releases perform. While the emphasis is on production-supported releases and features, this book also features previews of exciting new technologies such as ahead-of-time compilation and experimental garbage collections. Understand how various Java platforms and compilers affect performance Learn how Java garbage collection works Apply four principles to obtain best results from performance testing Use the JDK and other tools to learn how a Java application is performing Minimize the garbage collector’s impact through tuning and programming practices Tackle performance issues in Java APIs Improve Java-driven database application performance",
    "image": "http://books.google.com/books/content?id=Q3_QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "categories": [
      "Computers"
    ],
    "pageCount": 451,
    "isbn10": "1492056081",
    "isbn13": "9781492056089",
    "googleBooks": {
      "id": "Q3_QDwAAQBAJ",
      "preview": "http://books.google.com/books?id=Q3_QDwAAQBAJ&printsec=frontcover&dq=intitle:Java+Performance+Q3_QDwAAQBAJ&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=Q3_QDwAAQBAJ&dq=intitle:Java+Performance+Q3_QDwAAQBAJ&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/Java_Performance.html?hl=&id=Q3_QDwAAQBAJ"
    },
    "issueNumber": 29,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2024-02-17T19:11:07.000Z"
  },
  {
    "title": "Fundamentals of Software Architecture",
    "authors": [
      "Mark Richards",
      "Neal Ford"
    ],
    "publisher": "O'Reilly Media",
    "publishedDate": "2020-01-28",
    "description": "Salary surveys worldwide regularly place software architect in the top 10 best jobs, yet no real guide exists to help developers become architects. Until now. This book provides the first comprehensive overview of software architecture’s many aspects. Aspiring and existing architects alike will examine architectural characteristics, architectural patterns, component determination, diagramming and presenting architecture, evolutionary architecture, and many other topics. Mark Richards and Neal Ford—hands-on practitioners who have taught software architecture classes professionally for years—focus on architecture principles that apply across all technology stacks. You’ll explore software architecture in a modern light, taking into account all the innovations of the past decade. This book examines: Architecture patterns: The technical basis for many architectural decisions Components: Identification, coupling, cohesion, partitioning, and granularity Soft skills: Effective team management, meetings, negotiation, presentations, and more Modernity: Engineering practices and operational approaches that have changed radically in the past few years Architecture as an engineering discipline: Repeatable results, metrics, and concrete valuations that add rigor to software architecture",
    "image": "http://books.google.com/books/content?id=xa7MDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "categories": [
      "Computers"
    ],
    "pageCount": 422,
    "isbn10": "1492043427",
    "isbn13": "9781492043423",
    "googleBooks": {
      "id": "xa7MDwAAQBAJ",
      "preview": "http://books.google.com/books?id=xa7MDwAAQBAJ&printsec=frontcover&dq=intitle:Fundamentals+of+Software+Architecture&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=xa7MDwAAQBAJ&dq=intitle:Fundamentals+of+Software+Architecture&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/Fundamentals_of_Software_Architecture.html?hl=&id=xa7MDwAAQBAJ"
    },
    "issueNumber": 20,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2023-12-11T01:54:51.000Z"
  },
  {
    "title": "Fifty Quick Ideas to Improve Your Tests",
    "authors": [
      "Gojko Adzic",
      "David Evans",
      "Tom Roden"
    ],
    "publishedDate": "2015-05-15",
    "description": "This book is for cross-functional teams working in an iterative delivery environment, planning with user stories and testing frequently changing software under tough time pressure. This book will help you test your software better, easier and faster. Many of these ideas also help teams engage their business stakeholders better in defining key expectations and improve the quality of their software products.",
    "image": "http://books.google.com/books/content?id=Re3FsgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
    "language": "en",
    "pageCount": 124,
    "isbn10": "0993088112",
    "isbn13": "9780993088117",
    "googleBooks": {
      "id": "Re3FsgEACAAJ",
      "preview": "http://books.google.com/books?id=Re3FsgEACAAJ&dq=intitle:Fifty+Quick+Ideas+to+Improve+Your+User+Stories&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=Re3FsgEACAAJ&dq=intitle:Fifty+Quick+Ideas+to+Improve+Your+User+Stories&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/Fifty_Quick_Ideas_to_Improve_Your_Tests.html?hl=&id=Re3FsgEACAAJ"
    },
    "issueNumber": 19,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2023-08-06T04:06:15.000Z"
  },
  {
    "title": "Clean Code",
    "authors": [
      "Robert C. Martin"
    ],
    "publisher": "Pearson Education",
    "publishedDate": "2009",
    "description": "Looks at the principles and clean code, includes case studies showcasing the practices of writing clean code, and contains a list of heuristics and \"smells\" accumulated from the process of writing clean code.",
    "image": "http://books.google.com/books/content?id=hjEFCAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "averageRating": 4.5,
    "ratingsCount": 10,
    "categories": [
      "Computers"
    ],
    "pageCount": 464,
    "isbn10": "0132350882",
    "isbn13": "9780132350884",
    "googleBooks": {
      "id": "hjEFCAAAQBAJ",
      "preview": "http://books.google.com/books?id=hjEFCAAAQBAJ&printsec=frontcover&dq=intitle:Clean+Code&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=hjEFCAAAQBAJ&dq=intitle:Clean+Code&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/Clean_Code.html?hl=&id=hjEFCAAAQBAJ"
    },
    "issueNumber": 18,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2023-08-02T02:17:08.000Z"
  },
  {
    "title": "Software Engineering at Google",
    "authors": [
      "Titus Winters",
      "Tom Manshreck",
      "Hyrum Wright"
    ],
    "publisher": "O'Reilly Media",
    "publishedDate": "2020-02-28",
    "description": "Today, software engineers need to know not only how to program effectively but also how to develop proper engineering practices to make their codebase sustainable and healthy. This book emphasizes this difference between programming and software engineering. How can software engineers manage a living codebase that evolves and responds to changing requirements and demands over the length of its life? Based on their experience at Google, software engineers Titus Winters and Hyrum Wright, along with technical writer Tom Manshreck, present a candid and insightful look at how some of the world’s leading practitioners construct and maintain software. This book covers Google’s unique engineering culture, processes, and tools and how these aspects contribute to the effectiveness of an engineering organization. You’ll explore three fundamental principles that software organizations should keep in mind when designing, architecting, writing, and maintaining code: How time affects the sustainability of software and how to make your code resilient over time How scale affects the viability of software practices within an engineering organization What trade-offs a typical engineer needs to make when evaluating design and development decisions",
    "image": "http://books.google.com/books/content?id=V3TTDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "averageRating": 4,
    "ratingsCount": 4,
    "categories": [
      "Computers"
    ],
    "pageCount": 602,
    "isbn10": "1492082767",
    "isbn13": "9781492082767",
    "googleBooks": {
      "id": "V3TTDwAAQBAJ",
      "preview": "http://books.google.com/books?id=V3TTDwAAQBAJ&printsec=frontcover&dq=intitle:Software+Engineering+at+Google:+Lessons+Learned+from+Programming+Over+Time&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=V3TTDwAAQBAJ&dq=intitle:Software+Engineering+at+Google:+Lessons+Learned+from+Programming+Over+Time&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/Software_Engineering_at_Google.html?hl=&id=V3TTDwAAQBAJ"
    },
    "issueNumber": 17,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2023-06-18T18:59:04.000Z"
  },
  {
    "title": "Working Effectively with Legacy Code",
    "authors": [
      "Michael Feathers"
    ],
    "publisher": "Prentice Hall Professional",
    "publishedDate": "2004-09-22",
    "description": "Get more out of your legacy systems: more performance, functionality, reliability, and manageability Is your code easy to change? Can you get nearly instantaneous feedback when you do change it? Do you understand it? If the answer to any of these questions is no, you have legacy code, and it is draining time and money away from your development efforts. In this book, Michael Feathers offers start-to-finish strategies for working more effectively with large, untested legacy code bases. This book draws on material Michael created for his renowned Object Mentor seminars: techniques Michael has used in mentoring to help hundreds of developers, technical managers, and testers bring their legacy systems under control. The topics covered include Understanding the mechanics of software change: adding features, fixing bugs, improving design, optimizing performance Getting legacy code into a test harness Writing tests that protect you against introducing new problems Techniques that can be used with any language or platform—with examples in Java, C++, C, and C# Accurately identifying where code changes need to be made Coping with legacy systems that aren't object-oriented Handling applications that don't seem to have any structure This book also includes a catalog of twenty-four dependency-breaking techniques that help you work with program elements in isolation and make safer changes.",
    "image": "http://books.google.com/books/content?id=fB6s_Z6g0gIC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "averageRating": 4.5,
    "ratingsCount": 6,
    "categories": [
      "Computers"
    ],
    "pageCount": 456,
    "isbn10": "0132931753",
    "isbn13": "9780132931755",
    "googleBooks": {
      "id": "fB6s_Z6g0gIC",
      "preview": "http://books.google.com/books?id=fB6s_Z6g0gIC&printsec=frontcover&dq=intitle:Working+Effectively+with+Legacy+Code&hl=&cd=1&source=gbs_api",
      "info": "https://play.google.com/store/books/details?id=fB6s_Z6g0gIC&source=gbs_api",
      "canonical": "https://play.google.com/store/books/details?id=fB6s_Z6g0gIC"
    },
    "issueNumber": 16,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2023-06-18T18:56:42.000Z"
  },
  {
    "title": "User Story Mapping",
    "authors": [
      "Jeff Patton",
      "Peter Economy"
    ],
    "publisher": "\"O'Reilly Media, Inc.\"",
    "publishedDate": "2014-09-05",
    "description": "User story mapping is a valuable tool for software development, once you understand why and how to use it. This insightful book examines how this often misunderstood technique can help your team stay focused on users and their needs without getting lost in the enthusiasm for individual product features. Author Jeff Patton shows you how changeable story maps enable your team to hold better conversations about the project throughout the development process. Your team will learn to come away with a shared understanding of what you’re attempting to build and why. Get a high-level view of story mapping, with an exercise to learn key concepts quickly Understand how stories really work, and how they come to life in Agile and Lean projects Dive into a story’s lifecycle, starting with opportunities and moving deeper into discovery Prepare your stories, pay attention while they’re built, and learn from those you convert to working software",
    "image": "http://books.google.com/books/content?id=4YZyBAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "averageRating": 5,
    "ratingsCount": 1,
    "categories": [
      "Business & Economics"
    ],
    "pageCount": 324,
    "isbn10": "1491904887",
    "isbn13": "9781491904886",
    "googleBooks": {
      "id": "4YZyBAAAQBAJ",
      "preview": "http://books.google.com/books?id=4YZyBAAAQBAJ&printsec=frontcover&dq=intitle:User+Story+Mapping&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=4YZyBAAAQBAJ&dq=intitle:User+Story+Mapping&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/User_Story_Mapping.html?hl=&id=4YZyBAAAQBAJ"
    },
    "issueNumber": 14,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2023-04-15T23:28:41.000Z"
  },
  {
    "title": "Doing Agile Right",
    "authors": [
      "Darrell K. Rigby",
      "Sarah Elk",
      "Steven H. Berez"
    ],
    "publisher": "Harvard Business Press",
    "publishedDate": "2020-05-26",
    "description": "Agile has the power to transform work--but only if it's implemented the right way. For decades business leaders have been painfully aware of a huge chasm: They aspire to create nimble, flexible enterprises. But their day-to-day reality is silos, sluggish processes, and stalled innovation. Today, agile is hailed as the essential bridge across this chasm, with the potential to transform a company and catapult it to the head of the pack. Not so fast. In this clear-eyed, indispensable book, Bain & Company thought leader Darrell Rigby and his colleagues Sarah Elk and Steve Berez provide a much-needed reality check. They dispel the myths and misconceptions that have accompanied agile's rise to prominence--the idea that it can reshape an organization all at once, for instance, or that it should be used in every function and for all types of work. They illustrate that agile teams can indeed be powerful, making people's jobs more rewarding and turbocharging innovation, but such results are possible only if the method is fully understood and implemented the right way. The key, they argue, is balance. Every organization must optimize and tightly control some of its operations, and at the same time innovate. Agile, done well, enables vigorous innovation without sacrificing the efficiency and reliability essential to traditional operations. The authors break down how agile really works, show what not to do, and explain the crucial importance of scaling agile properly in order to reap its full benefit. They then lay out a road map for leading the transition to a truly agile enterprise. Agile isn't a goal in itself; it's a means to becoming a high-performance operation. Doing Agile Right is a must-have guide for any company trying to make the transition--or trying to sustain high agility.",
    "image": "http://books.google.com/books/content?id=lVmnDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "categories": [
      "Business & Economics"
    ],
    "pageCount": 256,
    "isbn10": "1633698718",
    "isbn13": "9781633698710",
    "googleBooks": {
      "id": "lVmnDwAAQBAJ",
      "preview": "http://books.google.com/books?id=lVmnDwAAQBAJ&printsec=frontcover&dq=intitle:Doing+Agile+Right+Transformation+Without+Chaos&hl=&cd=1&source=gbs_api",
      "info": "https://play.google.com/store/books/details?id=lVmnDwAAQBAJ&source=gbs_api",
      "canonical": "https://play.google.com/store/books/details?id=lVmnDwAAQBAJ"
    },
    "issueNumber": 12,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2023-02-18T13:57:54.000Z"
  },
  {
    "title": "Continuous Delivery",
    "authors": [
      "Jez Humble",
      "David Farley"
    ],
    "publisher": "Pearson Education",
    "publishedDate": "2010-07-27",
    "description": "Winner of the 2011 Jolt Excellence Award! Getting software released to users is often a painful, risky, and time-consuming process. This groundbreaking new book sets out the principles and technical practices that enable rapid, incremental delivery of high quality, valuable new functionality to users. Through automation of the build, deployment, and testing process, and improved collaboration between developers, testers, and operations, delivery teams can get changes released in a matter of hours— sometimes even minutes–no matter what the size of a project or the complexity of its code base. Jez Humble and David Farley begin by presenting the foundations of a rapid, reliable, low-risk delivery process. Next, they introduce the “deployment pipeline,” an automated process for managing all changes, from check-in to release. Finally, they discuss the “ecosystem” needed to support continuous delivery, from infrastructure, data and configuration management to governance. The authors introduce state-of-the-art techniques, including automated infrastructure management and data migration, and the use of virtualization. For each, they review key issues, identify best practices, and demonstrate how to mitigate risks. Coverage includes • Automating all facets of building, integrating, testing, and deploying software • Implementing deployment pipelines at team and organizational levels • Improving collaboration between developers, testers, and operations • Developing features incrementally on large and distributed teams • Implementing an effective configuration management strategy • Automating acceptance testing, from analysis to implementation • Testing capacity and other non-functional requirements • Implementing continuous deployment and zero-downtime releases • Managing infrastructure, data, components and dependencies • Navigating risk management, compliance, and auditing Whether you’re a developer, systems administrator, tester, or manager, this book will help your organization move from idea to release faster than ever—so you can deliver value to your business rapidly and reliably.",
    "image": "http://books.google.com/books/content?id=6ADDuzere-YC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "averageRating": 3.5,
    "ratingsCount": 3,
    "categories": [
      "Computers"
    ],
    "pageCount": 512,
    "isbn10": "0321670221",
    "isbn13": "9780321670229",
    "googleBooks": {
      "id": "6ADDuzere-YC",
      "preview": "http://books.google.com/books?id=6ADDuzere-YC&printsec=frontcover&dq=intitle:Continuous+Delivery&hl=&cd=4&source=gbs_api",
      "info": "https://play.google.com/store/books/details?id=6ADDuzere-YC&source=gbs_api",
      "canonical": "https://play.google.com/store/books/details?id=6ADDuzere-YC"
    },
    "issueNumber": 9,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2023-02-18T04:20:47.000Z"
  },
  {
    "title": "Modern Software Engineering",
    "authors": [
      "David Farley"
    ],
    "publisher": "Addison-Wesley Professional",
    "publishedDate": "2022-01-19",
    "description": "Writing for students at all levels of experience, Farley illuminates durable principles at the heart of effective software development. He distills the discipline into two core exercises: first, learning and exploration, and second, managing complexity. For each, he defines principles that can help students improve everything from their mindset to the quality of their code, and describes approaches proven to promote success. Farley's ideas and techniques cohere into a unified, scientific, and foundational approach to solving practical software development problems within realistic economic constraints. This general, durable, and pervasive approach to software engineering can help students solve problems they haven't encountered yet, using today's technologies and tomorrow's. It offers students deeper insight into what they do every day, helping them create better software, faster, with more pleasure and personal fulfillment.",
    "image": "http://books.google.com/books/content?id=ZKxHzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
    "language": "en",
    "categories": [
      "Engineering"
    ],
    "pageCount": 256,
    "isbn10": "0137314914",
    "isbn13": "9780137314911",
    "googleBooks": {
      "id": "ZKxHzgEACAAJ",
      "preview": "http://books.google.com/books?id=ZKxHzgEACAAJ&dq=intitle:Modern+Software+Engingeering&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=ZKxHzgEACAAJ&dq=intitle:Modern+Software+Engingeering&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/Modern_Software_Engineering.html?hl=&id=ZKxHzgEACAAJ"
    },
    "issueNumber": 8,
    "progressPercent": 0,
    "state": "reading",
    "startedAt": "2022-10-02T16:23:12.000Z"
  },
  {
    "title": "Building Microservices",
    "authors": [
      "Sam Newman"
    ],
    "publisher": "Oreilly & Associates Incorporated",
    "publishedDate": "2015-02-17",
    "description": "Over the past 10 years, distributed systems have become more fine-grained. From the large multi-million line long monolithic applications, we are now seeing the benefits of smaller self-contained services. Rather than heavy-weight, hard to change Service Oriented Architectures, we are now seeing systems consisting of collaborating microservices. Easier to change, deploy, and if required retire, organizations which are in the right position to take advantage of them are yielding significant benefits.This book takes an holistic view of the things you need to be cognizant of in order to pull this off. It covers just enough understanding of technology, architecture, operations and organization to show you how to move towards finer-grained systems.",
    "image": "http://books.google.com/books/content?id=1uUDoQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
    "language": "en",
    "averageRating": 4.5,
    "ratingsCount": 2,
    "categories": [
      "Computers"
    ],
    "pageCount": 259,
    "isbn10": "1491950358",
    "isbn13": "9781491950357",
    "googleBooks": {
      "id": "1uUDoQEACAAJ",
      "preview": "http://books.google.com/books?id=1uUDoQEACAAJ&dq=intitle:Building+Microservices&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=1uUDoQEACAAJ&dq=intitle:Building+Microservices&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/Building_Microservices.html?hl=&id=1uUDoQEACAAJ"
    },
    "issueNumber": 6,
    "progressPercent": 0,
    "state": "completed",
    "startedAt": "2022-07-14T01:59:49.000Z",
    "completedAt": "2022-07-31T02:21:14.000Z",
    "timeToComplete": 1470085000,
    "timeToCompleteFormatted": "2 weeks"
  },
  {
    "title": "Accelerate",
    "authors": [
      "Nicole Forsgren PhD",
      "Jez Humble",
      "Gene Kim"
    ],
    "publisher": "IT Revolution",
    "publishedDate": "2018-03-27",
    "description": "Winner of the Shingo Publication Award Accelerate your organization to win in the marketplace. How can we apply technology to drive business value? For years, we've been told that the performance of software delivery teams doesn't matter―that it can't provide a competitive advantage to our companies. Through four years of groundbreaking research to include data collected from the State of DevOps reports conducted with Puppet, Dr. Nicole Forsgren, Jez Humble, and Gene Kim set out to find a way to measure software delivery performance―and what drives it―using rigorous statistical methods. This book presents both the findings and the science behind that research, making the information accessible for readers to apply in their own organizations. Readers will discover how to measure the performance of their teams, and what capabilities they should invest in to drive higher performance. This book is ideal for management at every level.",
    "image": "http://books.google.com/books/content?id=Kax-DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "averageRating": 4.5,
    "ratingsCount": 3,
    "categories": [
      "Business & Economics"
    ],
    "pageCount": 288,
    "isbn10": "1942788355",
    "isbn13": "9781942788355",
    "googleBooks": {
      "id": "Kax-DwAAQBAJ",
      "preview": "http://books.google.com/books?id=Kax-DwAAQBAJ&printsec=frontcover&dq=intitle:Accelerate&hl=&cd=2&source=gbs_api",
      "info": "https://play.google.com/store/books/details?id=Kax-DwAAQBAJ&source=gbs_api",
      "canonical": "https://play.google.com/store/books/details?id=Kax-DwAAQBAJ"
    },
    "issueNumber": 5,
    "progressPercent": 0,
    "state": "completed",
    "startedAt": "2022-07-01T17:07:26.000Z",
    "completedAt": "2022-07-03T16:11:01.000Z",
    "timeToComplete": 169415000,
    "timeToCompleteFormatted": "1 day"
  },
  {
    "title": "Test-driven Development",
    "authors": [
      "Kent Beck"
    ],
    "publisher": "Addison-Wesley Professional",
    "publishedDate": "2003",
    "description": "Write clean code that works with the help of this groundbreaking software method. Example-driven teaching is the basis of Beck's step-by-step instruction that will have readers using TDD to further their projects.",
    "image": "http://books.google.com/books/content?id=CUlsAQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "averageRating": 4,
    "ratingsCount": 3,
    "categories": [
      "Computers"
    ],
    "pageCount": 220,
    "isbn10": "0321146530",
    "isbn13": "9780321146533",
    "googleBooks": {
      "id": "CUlsAQAAQBAJ",
      "preview": "http://books.google.com/books?id=CUlsAQAAQBAJ&printsec=frontcover&dq=intitle:Test-Driven+Design+By+Example&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=CUlsAQAAQBAJ&dq=intitle:Test-Driven+Design+By+Example&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/Test_driven_Development.html?hl=&id=CUlsAQAAQBAJ"
    },
    "issueNumber": 3,
    "progressPercent": 0,
    "state": "completed",
    "startedAt": "2022-07-01T16:57:42.000Z",
    "completedAt": "2022-07-10T03:39:31.000Z",
    "timeToComplete": 729709000,
    "timeToCompleteFormatted": "1 week"
  },
  {
    "title": "Release It!",
    "authors": [
      "Michael T. Nygard"
    ],
    "publisher": "Pragmatic Bookshelf",
    "publishedDate": "2018-01-08",
    "description": "A single dramatic software failure can cost a company millions of dollars - but can be avoided with simple changes to design and architecture. This new edition of the best-selling industry standard shows you how to create systems that run longer, with fewer failures, and recover better when bad things happen. New coverage includes DevOps, microservices, and cloud-native architecture. Stability antipatterns have grown to include systemic problems in large-scale systems. This is a must-have pragmatic guide to engineering for production systems. If you're a software developer, and you don't want to get alerts every night for the rest of your life, help is here. With a combination of case studies about huge losses - lost revenue, lost reputation, lost time, lost opportunity - and practical, down-to-earth advice that was all gained through painful experience, this book helps you avoid the pitfalls that cost companies millions of dollars in downtime and reputation. Eighty percent of project life-cycle cost is in production, yet few books address this topic. This updated edition deals with the production of today's systems - larger, more complex, and heavily virtualized - and includes information on chaos engineering, the discipline of applying randomness and deliberate stress to reveal systematic problems. Build systems that survive the real world, avoid downtime, implement zero-downtime upgrades and continuous delivery, and make cloud-native applications resilient. Examine ways to architect, design, and build software - particularly distributed systems - that stands up to the typhoon winds of a flash mob, a Slashdotting, or a link on Reddit. Take a hard look at software that failed the test and find ways to make sure your software survives. To skip the pain and get the experience...get this book.",
    "image": "http://books.google.com/books/content?id=Ug9QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
    "language": "en",
    "averageRating": 5,
    "ratingsCount": 2,
    "categories": [
      "Computers"
    ],
    "pageCount": 378,
    "isbn10": "1680504525",
    "isbn13": "9781680504521",
    "googleBooks": {
      "id": "Ug9QDwAAQBAJ",
      "preview": "http://books.google.com/books?id=Ug9QDwAAQBAJ&printsec=frontcover&dq=intitle:Release+It!&hl=&cd=1&source=gbs_api",
      "info": "https://play.google.com/store/books/details?id=Ug9QDwAAQBAJ&source=gbs_api",
      "canonical": "https://play.google.com/store/books/details?id=Ug9QDwAAQBAJ"
    },
    "issueNumber": 2,
    "progressPercent": 0,
    "state": "completed",
    "startedAt": "2022-05-21T23:39:45.000Z",
    "completedAt": "2024-02-04T15:52:05.000Z",
    "timeToComplete": 53885540000,
    "timeToCompleteFormatted": "1 year"
  },
  {
    "title": "Discovery",
    "authors": [
      "Gáspár Nagy"
    ],
    "publishedDate": "2018-02-07",
    "description": "Written by the creator of SpecFlow and the author of The Cucumber for Java Book, this book provides inside information on how to get the most out of the discovery phase of Behaviour Driven Development (BDD). This practical guide demonstrates good collaboration techniques, illustrated by concrete examples. This book is written for everyone involved in the specification and delivery of software (including product owners, business analysts, developers, and testers). The book starts by explaining the reasons BDD exists in the first place and describes techniques for getting the most out of collaboration between business and delivery team members. This is the first in the BDD Books series that will guide you through the entire development process, including specific technical practices needed to successfully drive development using collaboratively-authored specifications and living documentation.",
    "image": "http://books.google.com/books/content?id=FwLGswEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
    "language": "en",
    "pageCount": 100,
    "isbn10": "1983591254",
    "isbn13": "9781983591259",
    "googleBooks": {
      "id": "FwLGswEACAAJ",
      "preview": "http://books.google.com/books?id=FwLGswEACAAJ&dq=intitle:Discovery:+Explore+behaviour+using+examples&hl=&cd=1&source=gbs_api",
      "info": "http://books.google.com/books?id=FwLGswEACAAJ&dq=intitle:Discovery:+Explore+behaviour+using+examples&hl=&source=gbs_api",
      "canonical": "https://books.google.com/books/about/Discovery.html?hl=&id=FwLGswEACAAJ"
    },
    "issueNumber": 1,
    "progressPercent": 0,
    "state": "completed",
    "startedAt": "2022-05-21T23:38:18.000Z",
    "completedAt": "2022-05-22T13:46:44.000Z",
    "timeToComplete": 50906000,
    "timeToCompleteFormatted": "14 hours"
  }
]
